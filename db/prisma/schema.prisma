datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model test {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(256)

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @updatedAt @db.Timestamp(6)
}

enum AgeGroup {
  Farfadet
  Louveteau
  Scout
  Pionnier
  Compagnon
}

// enum Role {
//   Admin
//   RG
//   RespMatos
//   RespCleophas
//   RespCompta
//   RespSecretaire
//   Accoco
//   Chef
//   Compa
// }
model role {
  id        Int         @id @default(autoincrement())
  name      String      @unique @db.VarChar(256)

  users              userdataONrole[]
}

model userdata {
  firebase_id   String    @id @db.VarChar(256)
  verified      Boolean   @default(false)

  keyresp_local local[]
  roles         userdataONrole[]
  units         userdataONunit[]
  events        userdataONevent[]
}

model unit {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(256)
  age_group  AgeGroup

  local_id   Int
  local      local     @relation(fields: [local_id], references: [id])
  chefs      userdataONunit[]
  events     event[]

  created_at DateTime @default(now()) @db.Timestamp(6)
}

model local {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(256)
  address    String   @db.VarChar(1024)
  postalcode String   @db.VarChar(10)
  city       String   @db.VarChar(256)

  keyresp_userid  String @db.VarChar(256)
  keyresp_user    userdata @relation(fields: [keyresp_userid], references: [firebase_id])
  units           unit[]
  events          event[]

  created_at DateTime @default(now()) @db.Timestamp(6)
}

model event {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(256)
  start_date DateTime @db.Timestamp(6)
  end_date   DateTime @db.Timestamp(6)
  need_help  Boolean  @default(false)

  unit_id    Int
  unit       unit      @relation(fields: [unit_id], references: [id])
  local_id   Int
  local      local     @relation(fields: [local_id], references: [id])
  chefs      userdataONevent[]

  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @updatedAt @db.Timestamp(6)
}



model userdataONrole {
  user_id String
  user    userdata @relation(fields: [user_id], references: [firebase_id])
  role_id Int
  role    role @relation(fields: [role_id], references: [id])

  @@id([user_id, role_id])
}

model userdataONunit {
  chef_id String
  chef    userdata @relation(fields: [chef_id], references: [firebase_id])
  unit_id Int
  unit    unit @relation(fields: [unit_id], references: [id])

  @@id([chef_id, unit_id])
}

model userdataONevent {
  chef_id String
  chef    userdata @relation(fields: [chef_id], references: [firebase_id])
  event_id Int
  event   event @relation(fields: [event_id], references: [id])

  @@id([chef_id, event_id])
}
